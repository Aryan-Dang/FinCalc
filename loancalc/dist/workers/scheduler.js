"use strict";var __awaiter=this&&this.__awaiter||function(a,b,c,d){return new(c||(c=Promise))(function(e,f){function g(a){try{i(d.next(a))}catch(a){f(a)}}function h(a){try{i(d["throw"](a))}catch(a){f(a)}}function i(a){a.done?e(a.value):new c(function(b){b(a.value)}).then(g,h)}i((d=d.apply(a,b||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const serve_1=require("../serve"),db_files_1=require("../util/db-files"),scrapers_1=require("../util/scrapers"),schedule=require("node-schedule"),config=require("config"),moment=require("moment");let __running_jobs={};function incTaskCount(a){__running_jobs[a]?__running_jobs[a]+=1:__running_jobs[a]=1}function decTaskCount(a){__running_jobs[a]?__running_jobs[a]-=1:__running_jobs[a]=0}function getTaskCount(a){return __running_jobs[a]?__running_jobs[a]:0}function task(a,b,c){let d;return d="number"==typeof c?c:-1,()=>__awaiter(this,void 0,void 0,function*(){if(1>d||getTaskCount(b)<d){incTaskCount(b);try{yield a()}catch(a){serve_1.Logger.error("Error executing task %s",b,a)}decTaskCount(b)}})}function initScheduler(){schedule.scheduleJob("prune-files","0 * * * *",task(function(){return __awaiter(this,void 0,void 0,function*(){serve_1.Logger.verbose("Running file pruning task...");const a=config.get("server.uploadTTL"),b=config.get("server.uploadTTLUnits"),c=moment().subtract(a,b);yield db_files_1.pruneFiles(c)})},"prune-files",1)),schedule.scheduleJob("run-scrapers","30 * * * *",task(function(){return __awaiter(this,void 0,void 0,function*(){serve_1.Logger.verbose("Running scraper task..."),yield scrapers_1.runScrapers()})},"",1)),serve_1.Logger.info("Initialized scheduler.")}exports.initScheduler=initScheduler;