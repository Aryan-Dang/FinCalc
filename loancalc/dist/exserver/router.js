"use strict";var __awaiter=this&&this.__awaiter||function(a,b,c,d){return new(c||(c=Promise))(function(e,f){function g(a){try{i(d.next(a))}catch(a){f(a)}}function h(a){try{i(d["throw"](a))}catch(a){f(a)}}function i(a){a.done?e(a.value):new c(function(b){b(a.value)}).then(g,h)}i((d=d.apply(a,b||[])).next())})};Object.defineProperty(exports,"__esModule",{value:!0});const pathToRegexp=require("path-to-regexp"),logger_1=require("./logger"),serve_1=require("../serve"),Url=require("url");class RouteUtil{static resolveURL(...a){let b;return b="production"===process.env.NODE_ENV?"https://fincalc.co":"http://127.0.0.1:8080",a.reduce((a,b)=>Url.resolve(a,b),b)}static createURL(a,b){const c=new Url.URL(a);return b&&(c.search=new Url.URLSearchParams(b).toString()),c}static redirectTemporarily(a,b){a.status=307,a.set("Location",b.toString())}static redirectPermanently(a,b){a.status=308,a.set("Location",b.toString())}static movedPermanently(a,b){a.status=301,a.set("Location",b.toString())}}exports.RouteUtil=RouteUtil;class RouteParams{constructor(a){a&&Object.assign(this,a)}getString(a){return this[a]}isInt(a){const b=this[a];return"string"==typeof b&&Number.isFinite(Number.parseInt(b))}getInt(a){const b=this[a];if("string"==typeof b){const a=parseInt(b);if(Number.isFinite(a))return a}throw new serve_1.ServerError(!1,"bad-param",`Expected parameter ${a} to be an integer.`)}isNumber(a){const b=this[a];return"string"==typeof b&&Number.isFinite(Number.parseFloat(b))}getNumber(a){const b=this[a];if("string"==typeof b){const a=parseFloat(b);if(Number.isFinite(a))return a}throw new serve_1.ServerError(!1,"bad-param",`Expected parameter ${a} to be a number.`)}}class Router{constructor(a){this.matchers=[],a.map((a)=>this.addController(a)),this.matchers=this.matchers.sort((c,a)=>a.priority-c.priority)}getMatchingRoute(a,b){for(let c of this.matchers)if(a.toUpperCase()===c.method){const a=c.matcherFn(b);if(a)return{route:c,params:a}}return null}addController(a){for(let b of a.definedRoutes)logger_1.default.debug("Created router for pattern: `%s`.",b.pattern),this.matchers.push({controller:a,method:b.method.toUpperCase(),priority:b.priority,matcherFn:b.tryMatch,routeFn:b.routeFn.bind(a)})}}exports.Router=Router;class CRoute{constructor(a,b,c,d){this.method=a,this.pattern=b,this.routeFn=c,this.priority=d,this.tryMatch=()=>{throw new Error("This route does not have a matcher!")},this.compile()}compile(){const a=[],b=pathToRegexp(this.pattern,a);let c="";for(let b=0;b<a.length;b++){const d=a[b];0<b&&(c+=","),c+=`"${d.name}": matched[${b+1}]`}const d=new Function("regexp",`
            return function(pathname) {
                if (pathname) {
                    regexp.lastIndex = 0;
                    const matched = regexp.exec(pathname);
                    if (matched) {
                        const out = {
                            ${c}
                        };
                        return out;
                    }
                }
                return null;
            }
        `);this.tryMatch=d(b)}}exports.CRoute=CRoute;class Controller{getErrorHandler(){return null}filterRequest(){return __awaiter(this,void 0,void 0,function*(){return!0})}}exports.Controller=Controller;function route(a,b,c){return(d,e,f)=>{if(d instanceof Controller){const e=f.value;if(e instanceof Function)d.definedRoutes||(d.definedRoutes=[]),d.definedRoutes.push(new CRoute(a,b,e,c));else throw new Error("Routing decorators can only be used on methods.")}else throw new Error("Target must extend Controller to have a routing method.")}}exports.route=route;function get(a,b=-1){return route("GET",a,b)}exports.get=get;function post(a,b=-1){return route("POST",a,b)}exports.post=post;function options(a,b=-1){return route("OPTIONS",a,b)}exports.options=options;function del(a,b=-1){return route("DELETE",a,b)}exports.del=del;function createNextCallerFunction(a){let b=!1;return()=>{return b?Promise.resolve(null):(b=!0,a())}}function createRouterMiddlewareFn(a,b){return function(c,d){return __awaiter(this,void 0,void 0,function*(){const{request:e,response:f}=c;let g=e.method,h=e.path,i=0;let j=createNextCallerFunction(d);const k={context:c,app:a,params:new RouteParams({}),next:j,path:h,method:g,reroute:{method:null,path:null},error:null};Object.seal(k),Object.seal(k.reroute);do{const c=a.router.getMatchingRoute(g,h);let d=null;if(f.status=200,c)try{if(k.params=new RouteParams(c.params),yield c.route.controller.filterRequest(k)){const a=c.route.routeFn(k);a instanceof Promise&&(yield a)}}catch(a){k.error=a,d=c.route.controller.getErrorHandler(),logger_1.default.error("Error in controller.",a),f.body="Internal server error.",f.status=500}else f.body="Page not found.",f.status=404;if(k.error){let a=d||b;a&&a.handleError(k)}let e=!1;if(k.reroute.path&&(h=k.reroute.path,e=!0),k.reroute.method&&(g=k.reroute.method,e=!0),!e)break;k.error=null,k.reroute.path=null,k.reroute.method=null,k.path=h,k.method=g}while(i++<8);yield j()})}}exports.createRouterMiddlewareFn=createRouterMiddlewareFn;